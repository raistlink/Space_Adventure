;;; Copyright (c) 2012 by Álvaro Castro Castilla
;;; Test for Cairo with OpenGL
(define-structure star posx posy)
(define-structure shot posx posy)
(define-structure enemy posx posy)
(define-structure world gamestate position positionstate bullets enemies shipstate score highscore stars)

(define update-bullet 
  (lambda (shot)
    (shot-posy-set! shot (- (shot-posy shot) 10))))
(define update-enemy
  (lambda (enemy)
    (enemy-posy-set! enemy (+ (enemy-posy enemy) 5))))

(define update-highscore
  (lambda (world)
    (if (> (world-score world) (world-highscore world))
        (world-highscore-set! world (world-score world)))))

(define (collision bulletlist enemy world)
  (let loop ((rest bulletlist))
    (unless (null? rest)
            (if (and (or (> (shot-posx (car rest)) (enemy-posx enemy)) (> (+ (shot-posx (car rest)) 5) (enemy-posx enemy)))
                     (< (shot-posx (car rest)) (+ (enemy-posx enemy) 20))
                     (> (shot-posy (car rest)) (-(enemy-posy enemy) 20))
                     (< (shot-posy (car rest)) (enemy-posy enemy)))
                (begin (shot-posy-set! (car rest) -10.0)
                       (world-score-set! world (+ (world-score world) 10))
                       #t)
            (loop (cdr rest))))))

(define (player-collision enemylist world)
  (let loop ((rest enemylist))
    (unless (null? rest)
            (if (and (or (> (enemy-posx (car rest)) (world-position world)) (> (+ (enemy-posx (car rest)) 20) (world-position world)))
                     (< (enemy-posx (car rest))  (+ (world-position world) 40))
                     (> (enemy-posy (car rest)) 610.0)
                     (< (enemy-posy (car rest)) 650.0))
                #t
                (loop (cdr rest))))))

(define (bullet-collision bulletlist enemylist world)
  (let loop ((rest enemylist))
    (if (null? rest)
        '()
        (if (collision bulletlist (car rest) world)
            (loop (cdr rest))
            (cons (car rest) (loop (cdr rest)))))))

(define (filter pred lis) ; Sleazing with EQ? makes this
  (let recur ((lis lis))  
    (if (null? lis) lis   ; Use NOT-PAIR? to handle dotted lists.
        (let ((head (car lis))
              (tail (cdr lis)))
          (if (pred head)
              (let ((new-tail (recur tail))) ; Replicate the RECUR call so
                (if (eq? tail new-tail) lis
                    (cons head new-tail)))
              (recur tail))))))

(define (remove pred lis) (filter (lambda (x) (not (pred x))) lis))

(define (main)
  ((fusion:create-simple-gl-cairo '(width: 1280 height: 752))
   (lambda (event world)
     (println (string-append "event: " (object->string event) " ; world: " (object->string world)))
     (let ((type (SDL_Event-type event)))
       (cond
        ((= type SDL_QUIT)
         'exit)
        ((= type SDL_MOUSEBUTTONDOWN)
         (SDL_LogVerbose SDL_LOG_CATEGORY_APPLICATION "Button down")
         world)
        ((= type SDL_KEYDOWN)
         (SDL_LogVerbose SDL_LOG_CATEGORY_APPLICATION "Key down")
         (let* ((kevt (SDL_Event-key event))
                (key (SDL_Keysym-sym
                      (SDL_KeyboardEvent-keysym kevt))))
           (cond ((= key SDLK_ESCAPE)
                  'exit)
                 ((= key SDLK_RETURN)
                  (if (eq? (world-gamestate world) 'splashscreen)
                      (make-world 'gamescreen 600.0 'idle '() '() 'idle 0 (world-highscore world) (world-stars world))
                      (make-world 'splashscreen (world-position world) 'idle (world-bullets world) (world-enemies world) (world-shipstate world) (world-score world) (world-highscore world) (world-stars world))))
                 ((= key SDLK_h)
                  (if (eq? (world-gamestate world) 'splashscreen)
                      (make-world 'highscores (world-position world) 'idle (world-bullets world) (world-enemies world) (world-shipstate world) (world-score world) (world-highscore world) (world-stars world))
                      world))
                 ((= key SDLK_SPACE)
                  (if (not (eq? (world-shipstate world) 'shooting))
                      (if (eq? (world-gamestate world) 'gamescreen)
                          (make-world (world-gamestate world) (world-position world) (world-positionstate world)  (cons (make-shot (+ (world-position world) 20) 650.0) (world-bullets world)) (world-enemies world) 'shooting (world-score world) (world-highscore world) (world-stars world))
                          world)
                      world)) 
                 ((= key SDLK_LEFT)
                  (if (eq? (world-gamestate world) 'gamescreen)
                      (make-world 'gamescreen (world-position world) 'left (world-bullets world) (world-enemies world) (world-shipstate world) (world-score world) (world-highscore world) (world-stars world))
                      world))
                 ((= key SDLK_RIGHT)
                  (if (eq? (world-gamestate world) 'gamescreen)
                      (make-world 'gamescreen (world-position world) 'right (world-bullets world) (world-enemies world) (world-shipstate world) (world-score world) (world-highscore world) (world-stars world))
                      world))
                 (else
                  (SDL_LogVerbose SDL_LOG_CATEGORY_APPLICATION (string-append "Key: " (number->string key)))
                  world))))
        ((= type SDL_KEYUP)
         (let* ((kevt (SDL_Event-key event))
                (key (SDL_Keysym-sym
                      (SDL_KeyboardEvent-keysym kevt))))
           (cond ((= key SDLK_LEFT)
                  (if (eq? (world-positionstate world) 'left)
                      (make-world (world-gamestate world) (world-position world) 'idle (world-bullets world) (world-enemies world) (world-shipstate world) (world-score world) (world-highscore world) (world-stars world))
                      world))
                 ((= key SDLK_RIGHT)
                  (if (eq? (world-positionstate world) 'right)
                      (make-world (world-gamestate world) (world-position world) 'idle (world-bullets world) (world-enemies world) (world-shipstate world) (world-score world) (world-highscore world) (world-stars world))
                      world))
                 ((= key SDLK_SPACE)
                  (make-world (world-gamestate world) (world-position world) (world-positionstate world) (world-bullets world) (world-enemies world) 'idle (world-score world) (world-highscore world) (world-stars world)))
                 (else
                  world))))
        (else
         world))))
   (let ((spawntimer 1000) (spawncount 0)) 
     (lambda (cr time world)
       (println (string-append "time: " (object->string time) " ; world: " (object->string world)))
       ;;(SDL_LogInfo SDL_LOG_CATEGORY_APPLICATION (object->string (SDL_GL_Extension_Supported "GL_EXT_texture_format_BGRA8888")))
       (case (world-gamestate world)
        
         ((splashscreen)
          (cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
          (cairo_rectangle cr 0.0 0.0 1280.0 752.0)
          (cairo_fill cr)
          (cairo_select_font_face cr "Sans" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
          (cairo_set_source_rgba cr 1.0 1.0 0.0 1.0)
          (cairo_set_font_size cr 80.0)
          (cairo_move_to cr 450.0 350.0)
          (cairo_show_text cr "STARLIN")
          (cairo_set_source_rgba cr 1.0 1.0 1.0 1.0)
          (cairo_set_font_size cr 40.0)
          (cairo_move_to cr 440.0 450.0)
          (cairo_show_text cr "The space marxist")
          (cairo_fill cr))
         ((gamescreen)
          ;;Update phase
          (if (eq? (world-positionstate world) 'left)
              (if (> (world-position world) 320.0)
                  (world-position-set! world (- (world-position world) 6))))
          (if (eq? (world-positionstate world) 'right)
              (if (< (world-position world) 920.0)
                  (world-position-set! world (+ (world-position world) 6))))
          (if (> (- time spawncount) spawntimer)
              (begin (set! spawncount (+ spawncount spawntimer))
                     (world-enemies-set! world (cons (make-enemy (exact->inexact (+ (random-integer 620) 320)) -10.0) (world-enemies world)))))
          (update-highscore world)
          (map update-bullet (world-bullets world))
          (map update-enemy (world-enemies world))
          

          ;;Draw phase
          (cairo_set_source_rgba cr 1.0 1.0 1.0 1.0)
          (cairo_rectangle cr 0.0 0.0 1280.0 752.0)
          (cairo_fill cr)
          (cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
          (cairo_rectangle cr 10.0 10.0 295.0 732.0)
          (cairo_fill cr)
          (cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
          (cairo_rectangle cr 315.0 10.0 650.0 732.0)
          (cairo_fill cr)
          (cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
          (cairo_rectangle cr 975.0 10.0 295.0 732.0)
          (cairo_fill cr)
          (cairo_select_font_face cr "Sans" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
          (cairo_set_source_rgba cr 0.0 1.0 0.0 0.8)
          (cairo_set_font_size cr 30.0)
          (cairo_move_to cr 990.0 50.0)
          (cairo_show_text cr "Score: ")
          (cairo_set_source_rgba cr 1.0 1.0 1.0 0.8)
          (cairo_set_font_size cr 30.0)
          (cairo_move_to cr 1200.0 50.0)
          (cairo_show_text cr (number->string (world-score world)))
          (cairo_set_source_rgba cr 0.0 1.0 0.0 0.8)
          (cairo_set_font_size cr 30.0)
          (cairo_move_to cr 990.0 80.0)
          (cairo_show_text cr "HighScore: ")
          (cairo_set_source_rgba cr 1.0 1.0 1.0 0.8)
          (cairo_set_font_size cr 30.0)
          (cairo_move_to cr 1200.0 80.0)
          (cairo_show_text cr (number->string (world-highscore world)))

          (let loop ((rest (world-bullets world)))
            (if (null? rest)
                '()
                (begin (cairo_set_source_rgba cr 1.0 1.0 0.0 1.0)
                       (cairo_rectangle cr (shot-posx (car rest)) (shot-posy (car rest)) 5.0 10.0)
                       (cairo_fill cr)
                       (loop (cdr rest)))))
          (let loop ((rest (world-enemies world)))
            (if (null? rest)
                '()
                (begin (cairo_set_source_rgba cr 0.0 1.0 1.0 1.0)
                       (cairo_rectangle cr (enemy-posx (car rest)) (enemy-posy (car rest)) 20.0 20.0)
                       (cairo_fill cr)
                       (loop (cdr rest)))))
          (world-bullets-set! world (remove (lambda (shot) (< (shot-posy shot) 0)) (world-bullets world)))
          (world-enemies-set! world (remove (lambda (enemy) (> (enemy-posy enemy) 752)) (world-enemies world)))
          (world-enemies-set! world (bullet-collision (world-bullets world) (world-enemies world) world))
          (if (player-collision (world-enemies world) world)
              (world-gamestate-set! world 'lost))
          (cairo_set_source_rgba cr 1.0 0.0 0.0 0.8)
          (cairo_rectangle cr (world-position world) 650.0 40.0 40.0)
          (cairo_fill cr))

         ((lost)
          (cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
          (cairo_rectangle cr 0.0 0.0 1280.0 752.0)
          (cairo_fill cr)
          (cairo_select_font_face cr "Sans" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
          (cairo_set_source_rgba cr 1.0 1.0 1.0 0.8)
          (cairo_set_font_size cr 80.0)
          (cairo_move_to cr 350.0 350.0)
          (cairo_show_text cr "YOU LOST")
          (cairo_fill cr))

         ((highscores)
          (cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
          (cairo_rectangle cr 0.0 0.0 1280.0 752.0)
          (cairo_fill cr)
          (cairo_select_font_face cr "Sans" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
          (cairo_set_source_rgba cr 1.0 1.0 1.0 0.8)
          (cairo_set_font_size cr 80.0)
          (cairo_move_to cr 300.0 350.0)
          (cairo_show_text cr "HIGHSCORES")
          (cairo_fill cr)))
       world))
   (make-world 
    'splashscreen
    600.0
    'idle
    '()
    '()
    'idle
    0
    0
    '())))
